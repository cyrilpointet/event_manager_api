## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/user/register
    metadata:
      title: 'Create a user'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The user''s nickname'
        required: true
        example: eos
        type: string
      email:
        name: email
        description: 'The user''s email. Must be unique.'
        required: true
        example: molestiae
        type: string
      password:
        name: password
        description: 'The user''s password'
        required: true
        example: consequatur
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/invitation
    metadata:
      title: 'Send invitation to a team from a user'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The team''s id to join'
        required: true
        example: 16
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/login
    metadata:
      title: 'Login a user and get a token'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The user''s email.'
        required: true
        example: aut
        type: string
      password:
        name: password
        description: 'The user''s password'
        required: true
        example: iure
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: 'Get a user by its token'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/name
    metadata:
      title: 'Get users by name or email'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/team/{id}'
    metadata:
      title: 'Leave a team'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The team''s id'
        required: true
        example: 7
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/invitation/{id}'
    metadata:
      title: 'Manage an invitation sent to a user by a team'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The invitation''s id'
        required: true
        example: 2
        type: integer
    queryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'an email'
        required: true
        example: false
        type: boolean
    responses: []
    responseFields: []
